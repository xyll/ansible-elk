---
- name: Install kibana packages
  package: name={{ item }} state=present
  become: true
  with_items:
    - kibana
    - unzip

      #- name: Check kibana filebeat dashboards
      #  stat: path=/tmp/filebeat-dashboards.zip
      #  ignore_errors: true
      #  register: kibana_dashboards_present
      #  become: true
      #
      #- name: Copy kibana filebeat dashboards
      #  copy:
      #    src=filebeat-dashboards.zip
      #    dest=/tmp/filebeat-dashboards.zip
      #    owner=root
      #    group=root
      #    mode=0644
      #  become: true
      #  ignore_errors: true
      #  when: kibana_dashboards_present != 0
      #
      #- name: Install kibana filebeat dashboards
      #  unarchive: src=/tmp/filebeat-dashboards.zip dest=/tmp/ copy=no
      #  ignore_errors: true
      #  when: kibana_dashboards_present != 0
      #  become: true
      #
      #- name: Configure kibana filebeat dashboards
      #  shell: sh /tmp/beats-dashboards-master/load.sh -url "http://localhost:9200" -user "{{kibana_user}}:{{kibana_password}}"
      #  ignore_errors: true
      #  become: true

- name: Check kibana users
  stat: path=/etc/nginx/htpasswd.users
  ignore_errors: true
  register: kibana_user_pwfile_exists
  become: true

- name: Create kibana admin user
  command: htpasswd -b -c /etc/nginx/htpasswd.users {{kibana_user}} {{kibana_password}}
  ignore_errors: true
  when: kibana_user_pwfile_exists != 0
  become: true

- name: Setup kibana service
  service: name=kibana state=started enabled=true
  become: true

# For slower connections and to make sure ES is listening
# we will wait for TCP/9200 to become available
- name: Wait for elasticsearch index to be available
  uri:
    url: http://localhost:9200/_cat/indices
    status_code: 200
  register: es_service_result
  until: es_service_result.status == 200
  retries: 50
  delay: 10
  when: not install_elasticsearch_xpack
  become: true

# We will use a more generic check if x-pack is installed as it wraps everything
# in additional authentication making it difficult to interpret HTTP status
# codes via success/fail.  There is probably a better way to do this but even
# using uri/url module it is the only X-Pack service that will hangs waiting
# for password input.
- name: Wait for elastic index to be available (X-Pack enabled only generic check)
  wait_for:
    host: localhost
    port: '{{ es_local_port }}'
    delay: 10
    connect_timeout: 5
    timeout: 420
    state: started
  when: install_elasticsearch_xpack
  become: true

# We need to insert data to create an initial index, query if it exists
- name: Check elasticsearch index for content
  uri:
    url=http://localhost:9200/_cat/indices
    method=GET
    return_content=yes
  register: elasticsearch_index
  when: not install_elasticsearch_xpack
  become: true

