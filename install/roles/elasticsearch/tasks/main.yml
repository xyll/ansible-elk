---
#
# Install/run elasticsearch
#

- name: Install add-apt-repostory
  become: yes
  apt: name=software-properties-common state=latest
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Add Oracle Java Repository
  become: yes
  apt_repository: repo='ppa:webupd8team/java'
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Accept Java 8 License
  become: yes
  debconf: name='oracle-java8-installer' question='shared/accepted-oracle-license-v1-1' value='true' vtype='select'
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Install Oracle Java 8
  become: yes
  apt: name={{item}} state=latest
  with_items:
    - oracle-java8-installer
    - ca-certificates
    - oracle-java8-set-default
  when: ansible_distribution == 'Ubuntu' and ansible_distribution_release == 'trusty'

- name: Add ElasticSearch yum repo.
  yum_repository:
    name: elasticsearch
    description: ElasticSearch YUM repo
    baseurl: "https://artifacts.elastic.co/packages/6.x/yum"
    gpgkey: "https://artifacts.elastic.co/GPG-KEY-elasticsearch"
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install apt-transport-https
  package: name={{ item }} state=present
  become: true
  with_items:
    - apt-transport-https
  when: ansible_distribution == 'Ubuntu'

- name: Add ElasticSearch apt key.
  apt_key:
    id: D88E42B4
    keyserver: pgp.mit.edu
    state: present
  when: ansible_distribution == 'Ubuntu'

- name: Add ElasticSearch apt repo.
  apt_repository:
    repo: "deb https://artifacts.elastic.co/packages/6.x/apt stable main"
    state: present
    filename: elasticsearch
    update_cache: yes
  when: ansible_distribution == 'Ubuntu'

- name: Install elasticsearch and openjdk on RHEL or Centos
  package: name={{ item }} state=present
  become: true
  with_items:
    - libsemanage-python
    - libselinux-python
    - java-openjdk-headless
    - elasticsearch
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Add nproc limits on CentOS or RHEL
  lineinfile:
    path: /etc/security/limits.d/91-c1-es-nproc.conf
    create: yes
    state: present
    line: 'elasticsearch       soft    nproc     8192'
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install elasticsearch on Ubuntu
  package: name={{ item }} state=present
  become: true
  with_items:
    - elasticsearch
  when: ansible_distribution == 'Ubuntu'

- name: Copy templated elasticsearch.yml
  template:
    src=elasticsearch.yml.j2
    dest=/etc/elasticsearch/elasticsearch.yml
    owner=root
    group=elasticsearch
    mode=0660
  become: true
  ignore_errors: true

- name: Copy templated jvm.options
  template:
    src=jvm.options.j2
    dest=/etc/elasticsearch/jvm.options
    owner=root
    group=elasticsearch
    mode=0660
  become: true
  ignore_errors: true
  register: elasticsearch_config_updated

- name: Apply workaround for java listening port
  raw: setcap 'cap_net_bind_service=+ep' /usr/lib/jvm/java-1.8.*openjdk-*/jre/bin/java
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# https://www.centos.org/forums/viewtopic.php?t=16398
- name: Obtain exact version of JRE for libjli.so workaround
  shell: "ls /usr/lib/jvm/ | grep java | grep openjdk-1"
  register: libjli_location
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Apply EL symlink workaround for libjli.so
  file:
    src='/usr/lib/jvm/{{libjli_location.stdout}}/jre/lib/amd64/jli/libjli.so'
    dest='/lib64/libjli.so'
    state=link
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Start or restart elasticsearch service with systermctl
  systemd:
    name: elasticsearch
    state: restarted
    enabled: true
  ignore_errors: true
  become: true
  when: elasticsearch_config_updated.changed != 0 and ( ansible_distribution_release != 'trusty' and ansible_distribution_major_version != "6" )

- name: Start or restart elasticsearch service with service
  service:
    name: elasticsearch
    state: restarted
    enabled: true
  ignore_errors: true
  become: true
  when: elasticsearch_config_updated.changed != 0 and ( ansible_distribution_release == 'trusty' or ansible_distribution_major_version == "6" )
