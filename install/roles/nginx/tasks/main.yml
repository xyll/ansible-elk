---
- name: Add EPEL repository
  yum_repository:
    name: epel
    description: EPEL YUM repo
    baseurl: https://download.fedoraproject.org/pub/epel/$releasever/$basearch/
    gpgcheck: no
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install nginx, httpd-tools, httplib2 on CentOS or RHEL
  package: name={{ item }} state=present
  become: true
  with_items:
    - htop
    - nginx
    - httpd-tools
    - python-httplib2
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

# SELinux boolean for nginx
- name: Apply SELinux boolean httpd_can_network_connect
  seboolean: name=httpd_can_network_connect state=yes persistent=yes
  become: true
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'Red Hat Enterprise Linux'

- name: Install nginx-full apache2-utils on Ubuntu
  package: name={{ item }} state=present
  become: true
  with_items:
    - htop
    - nginx-full
    - apache2-utils
  when: ansible_distribution == 'Ubuntu'

# create /etc/nginx/conf.d/ directory
- name: Create nginx directory structure
  file: path=/etc/nginx/conf.d/
    state=directory
    mode=0755
  become: true

# deploy kibana.conf with FQDN
- name: Setup nginx reverse proxy for kibana
  template:
    src=kibana.conf.j2
    dest=/etc/nginx/conf.d/kibana.conf
    owner=root
    group=root
    mode=0644
  become: true
  register: nginx_config_updated

# deploy basic nginx.conf 8080 vhost
- name: Setup nginx TCP/8080 vhost for SSL certificate
  template:
    src=nginx.conf.j2
    dest=/etc/nginx/nginx.conf
    owner=root
    group=root
    mode=0644
  become: true

- name: Start or restart nginx service with systermctl
  systemd:
    name: nginx
    state: restarted
    enabled: true
  ignore_errors: true
  become: true
  when: nginx_config_updated.changed != 0 and ( ansible_distribution_release != 'trusty' and ansible_distribution_major_version != "6" )

- name: Start or restart nginx service with service
  service:
    name: nginx
    state: restarted
    enabled: true
  ignore_errors: true
  become: true
  when: nginx_config_updated.changed != 0 and ( ansible_distribution_release == 'trusty' or ansible_distribution_major_version == "6" )
